export default [
  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
  { inputs: [], name: 'AccessControlBadConfirmation', type: 'error' },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'bytes32', name: 'neededRole', type: 'bytes32' },
    ],
    name: 'AccessControlUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'allowance', type: 'uint256' },
      { internalType: 'uint256', name: 'needed', type: 'uint256' },
    ],
    name: 'ERC20InsufficientAllowance',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      { internalType: 'uint256', name: 'balance', type: 'uint256' },
      { internalType: 'uint256', name: 'needed', type: 'uint256' },
    ],
    name: 'ERC20InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'approver', type: 'address' }],
    name: 'ERC20InvalidApprover',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'receiver', type: 'address' }],
    name: 'ERC20InvalidReceiver',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],
    name: 'ERC20InvalidSender',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'spender', type: 'address' }],
    name: 'ERC20InvalidSpender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Folio__AuctionCannotBeOpenedWithoutRestriction',
    type: 'error',
  },
  { inputs: [], name: 'Folio__AuctionNotOngoing', type: 'error' },
  { inputs: [], name: 'Folio__BadFeeTotal', type: 'error' },
  { inputs: [], name: 'Folio__BalanceNotRemovable', type: 'error' },
  { inputs: [], name: 'Folio__BasketModificationFailed', type: 'error' },
  { inputs: [], name: 'Folio__DuplicateAsset', type: 'error' },
  { inputs: [], name: 'Folio__EmptyAssets', type: 'error' },
  { inputs: [], name: 'Folio__EmptyAuction', type: 'error' },
  { inputs: [], name: 'Folio__FeeRecipientInvalidAddress', type: 'error' },
  { inputs: [], name: 'Folio__FeeRecipientInvalidFeeShare', type: 'error' },
  { inputs: [], name: 'Folio__FolioDeprecated', type: 'error' },
  { inputs: [], name: 'Folio__InsufficientBid', type: 'error' },
  { inputs: [], name: 'Folio__InsufficientBuyAvailable', type: 'error' },
  { inputs: [], name: 'Folio__InsufficientSellAvailable', type: 'error' },
  { inputs: [], name: 'Folio__InsufficientSharesOut', type: 'error' },
  { inputs: [], name: 'Folio__InvalidArrayLengths', type: 'error' },
  { inputs: [], name: 'Folio__InvalidAsset', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'asset', type: 'address' }],
    name: 'Folio__InvalidAssetAmount',
    type: 'error',
  },
  { inputs: [], name: 'Folio__InvalidAuctionLength', type: 'error' },
  { inputs: [], name: 'Folio__InvalidLimits', type: 'error' },
  { inputs: [], name: 'Folio__InvalidPrices', type: 'error' },
  { inputs: [], name: 'Folio__InvalidRegistry', type: 'error' },
  { inputs: [], name: 'Folio__InvalidTTL', type: 'error' },
  { inputs: [], name: 'Folio__InvalidTransferToSelf', type: 'error' },
  { inputs: [], name: 'Folio__InvalidWeights', type: 'error' },
  { inputs: [], name: 'Folio__MintFeeTooHigh', type: 'error' },
  { inputs: [], name: 'Folio__MixedAtomicSwaps', type: 'error' },
  { inputs: [], name: 'Folio__NotRebalancing', type: 'error' },
  { inputs: [], name: 'Folio__SlippageExceeded', type: 'error' },
  { inputs: [], name: 'Folio__TVLFeeTooHigh', type: 'error' },
  { inputs: [], name: 'Folio__TVLFeeTooLow', type: 'error' },
  { inputs: [], name: 'Folio__TooManyFeeRecipients', type: 'error' },
  { inputs: [], name: 'Folio__TrustedFillerRegistryAlreadySet', type: 'error' },
  { inputs: [], name: 'Folio__TrustedFillerRegistryNotEnabled', type: 'error' },
  { inputs: [], name: 'Folio__Unauthorized', type: 'error' },
  { inputs: [], name: 'Folio__ZeroInitialShares', type: 'error' },
  { inputs: [], name: 'InvalidInitialization', type: 'error' },
  { inputs: [], name: 'NotInitializing', type: 'error' },
  { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'auctionId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sellToken',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'buyToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'sellAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'buyAmount',
        type: 'uint256',
      },
    ],
    name: 'AuctionBid',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'auctionId',
        type: 'uint256',
      },
    ],
    name: 'AuctionClosed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newAuctionDelay',
        type: 'uint256',
      },
    ],
    name: 'AuctionDelaySet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newAuctionLength',
        type: 'uint256',
      },
    ],
    name: 'AuctionLengthSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rebalanceNonce',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'auctionId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        indexed: false,
        internalType: 'struct IFolio.WeightRange[]',
        name: 'weights',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        indexed: false,
        internalType: 'struct IFolio.PriceRange[]',
        name: 'prices',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        indexed: false,
        internalType: 'struct IFolio.RebalanceLimits',
        name: 'limits',
        type: 'tuple',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'startTime',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'endTime',
        type: 'uint256',
      },
    ],
    name: 'AuctionOpened',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'auctionId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'filler',
        type: 'address',
      },
    ],
    name: 'AuctionTrustedFillCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'BasketTokenAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'BasketTokenRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newDustAmount',
        type: 'uint256',
      },
    ],
    name: 'DustAmountSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint96', name: 'portion', type: 'uint96' },
        ],
        indexed: false,
        internalType: 'struct IFolio.FeeRecipient[]',
        name: 'recipients',
        type: 'tuple[]',
      },
    ],
    name: 'FeeRecipientsSet',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'FolioDeprecated', type: 'event' },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'FolioFeePaid',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'version',
        type: 'uint64',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'newMandate',
        type: 'string',
      },
    ],
    name: 'MandateSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newFee',
        type: 'uint256',
      },
    ],
    name: 'MintFeeSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ProtocolFeePaid',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: 'bool', name: 'weightControl', type: 'bool' },
          {
            internalType: 'enum IFolio.PriceControl',
            name: 'priceControl',
            type: 'uint8',
          },
        ],
        indexed: false,
        internalType: 'struct IFolio.RebalanceControl',
        name: 'newControl',
        type: 'tuple',
      },
    ],
    name: 'RebalanceControlSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
    ],
    name: 'RebalanceEnded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum IFolio.PriceControl',
        name: 'priceControl',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        indexed: false,
        internalType: 'struct IFolio.WeightRange[]',
        name: 'weights',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        indexed: false,
        internalType: 'struct IFolio.PriceRange[]',
        name: 'prices',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        indexed: false,
        internalType: 'struct IFolio.RebalanceLimits',
        name: 'limits',
        type: 'tuple',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'restrictedUntil',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'availableUntil',
        type: 'uint256',
      },
    ],
    name: 'RebalanceStarted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeAnnually',
        type: 'uint256',
      },
    ],
    name: 'TVLFeeSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'trustedFillerRegistry',
        type: 'address',
      },
      { indexed: false, internalType: 'bool', name: 'isEnabled', type: 'bool' },
    ],
    name: 'TrustedFillerRegistrySet',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract IERC20', name: 'token', type: 'address' },
    ],
    name: 'addToBasket',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auctionLength',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'id', type: 'uint256' }],
    name: 'auctions',
    outputs: [
      { internalType: 'uint256', name: 'rebalanceNonce', type: 'uint256' },
      { internalType: 'uint256', name: 'startTime', type: 'uint256' },
      { internalType: 'uint256', name: 'endTime', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'auctionId', type: 'uint256' },
      { internalType: 'contract IERC20', name: 'sellToken', type: 'address' },
      { internalType: 'contract IERC20', name: 'buyToken', type: 'address' },
      { internalType: 'uint256', name: 'sellAmount', type: 'uint256' },
      { internalType: 'uint256', name: 'maxBuyAmount', type: 'uint256' },
      { internalType: 'bool', name: 'withCallback', type: 'bool' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'bid',
    outputs: [{ internalType: 'uint256', name: 'boughtAmt', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'auctionId', type: 'uint256' }],
    name: 'closeAuction',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'auctionId', type: 'uint256' },
      { internalType: 'contract IERC20', name: 'sellToken', type: 'address' },
      { internalType: 'contract IERC20', name: 'buyToken', type: 'address' },
      { internalType: 'address', name: 'targetFiller', type: 'address' },
      { internalType: 'bytes32', name: 'deploymentSalt', type: 'bytes32' },
    ],
    name: 'createTrustedFill',
    outputs: [
      {
        internalType: 'contract IBaseTrustedFiller',
        name: 'filler',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'daoFeeRegistry',
    outputs: [
      {
        internalType: 'contract IFolioDAOFeeRegistry',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'daoPendingFeeShares',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deprecateFolio',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'distributeFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'endRebalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'feeRecipients',
    outputs: [
      { internalType: 'address', name: 'recipient', type: 'address' },
      { internalType: 'uint96', name: 'portion', type: 'uint96' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeRecipientsPendingFeeShares',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'auctionId', type: 'uint256' },
      { internalType: 'contract IERC20', name: 'sellToken', type: 'address' },
      { internalType: 'contract IERC20', name: 'buyToken', type: 'address' },
      { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
      { internalType: 'uint256', name: 'maxSellAmount', type: 'uint256' },
    ],
    name: 'getBid',
    outputs: [
      { internalType: 'uint256', name: 'sellAmount', type: 'uint256' },
      { internalType: 'uint256', name: 'bidAmount', type: 'uint256' },
      { internalType: 'uint256', name: 'price', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPendingFeeShares',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRebalance',
    outputs: [
      { internalType: 'uint256', name: 'nonce', type: 'uint256' },
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.WeightRange[]',
        name: 'weights',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.PriceRange[]',
        name: 'initialPrices',
        type: 'tuple[]',
      },
      { internalType: 'bool[]', name: 'inRebalance', type: 'bool[]' },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.RebalanceLimits',
        name: 'limits',
        type: 'tuple',
      },
      { internalType: 'uint256', name: 'startedAt', type: 'uint256' },
      { internalType: 'uint256', name: 'restrictedUntil', type: 'uint256' },
      { internalType: 'uint256', name: 'availableUntil', type: 'uint256' },
      {
        internalType: 'enum IFolio.PriceControl',
        name: 'priceControl',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'uint256', name: 'index', type: 'uint256' },
    ],
    name: 'getRoleMember',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleMemberCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleMembers',
    outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'string', name: 'symbol', type: 'string' },
          { internalType: 'address[]', name: 'assets', type: 'address[]' },
          { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
          { internalType: 'uint256', name: 'initialShares', type: 'uint256' },
        ],
        internalType: 'struct IFolio.FolioBasicDetails',
        name: '_basicDetails',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'uint256', name: 'auctionLength', type: 'uint256' },
          {
            components: [
              { internalType: 'address', name: 'recipient', type: 'address' },
              { internalType: 'uint96', name: 'portion', type: 'uint96' },
            ],
            internalType: 'struct IFolio.FeeRecipient[]',
            name: 'feeRecipients',
            type: 'tuple[]',
          },
          { internalType: 'uint256', name: 'tvlFee', type: 'uint256' },
          { internalType: 'uint256', name: 'mintFee', type: 'uint256' },
          { internalType: 'string', name: 'mandate', type: 'string' },
        ],
        internalType: 'struct IFolio.FolioAdditionalDetails',
        name: '_additionalDetails',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'address', name: 'daoFeeRegistry', type: 'address' },
          {
            internalType: 'address',
            name: 'trustedFillerRegistry',
            type: 'address',
          },
        ],
        internalType: 'struct IFolio.FolioRegistryIndex',
        name: '_folioRegistries',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'bool', name: 'trustedFillerEnabled', type: 'bool' },
          {
            components: [
              { internalType: 'bool', name: 'weightControl', type: 'bool' },
              {
                internalType: 'enum IFolio.PriceControl',
                name: 'priceControl',
                type: 'uint8',
              },
            ],
            internalType: 'struct IFolio.RebalanceControl',
            name: 'rebalanceControl',
            type: 'tuple',
          },
        ],
        internalType: 'struct IFolio.FolioFlags',
        name: '_folioFlags',
        type: 'tuple',
      },
      { internalType: 'address', name: '_creator', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDeprecated',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastPoke',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mandate',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'shares', type: 'uint256' },
      { internalType: 'address', name: 'receiver', type: 'address' },
      { internalType: 'uint256', name: 'minSharesOut', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [
      { internalType: 'address[]', name: '_assets', type: 'address[]' },
      { internalType: 'uint256[]', name: '_amounts', type: 'uint256[]' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mintFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nextAuctionId',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'rebalanceNonce', type: 'uint256' },
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.WeightRange[]',
        name: 'newWeights',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.PriceRange[]',
        name: 'newPrices',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.RebalanceLimits',
        name: 'newLimits',
        type: 'tuple',
      },
    ],
    name: 'openAuction',
    outputs: [{ internalType: 'uint256', name: 'auctionId', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'rebalanceNonce', type: 'uint256' },
    ],
    name: 'openAuctionUnrestricted',
    outputs: [{ internalType: 'uint256', name: 'auctionId', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poke',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalanceControl',
    outputs: [
      { internalType: 'bool', name: 'weightControl', type: 'bool' },
      {
        internalType: 'enum IFolio.PriceControl',
        name: 'priceControl',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'shares', type: 'uint256' },
      { internalType: 'address', name: 'receiver', type: 'address' },
      { internalType: 'address[]', name: 'assets', type: 'address[]' },
      { internalType: 'uint256[]', name: 'minAmountsOut', type: 'uint256[]' },
    ],
    name: 'redeem',
    outputs: [
      { internalType: 'uint256[]', name: '_amounts', type: 'uint256[]' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract IERC20', name: 'token', type: 'address' },
    ],
    name: 'removeFromBasket',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'callerConfirmation', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_newLength', type: 'uint256' }],
    name: 'setAuctionLength',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint96', name: 'portion', type: 'uint96' },
        ],
        internalType: 'struct IFolio.FeeRecipient[]',
        name: '_newRecipients',
        type: 'tuple[]',
      },
    ],
    name: 'setFeeRecipients',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'string', name: '_newMandate', type: 'string' }],
    name: 'setMandate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_newFee', type: 'uint256' }],
    name: 'setMintFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bool', name: 'weightControl', type: 'bool' },
          {
            internalType: 'enum IFolio.PriceControl',
            name: 'priceControl',
            type: 'uint8',
          },
        ],
        internalType: 'struct IFolio.RebalanceControl',
        name: '_rebalanceControl',
        type: 'tuple',
      },
    ],
    name: 'setRebalanceControl',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_newFee', type: 'uint256' }],
    name: 'setTVLFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_newFillerRegistry', type: 'address' },
      { internalType: 'bool', name: '_enabled', type: 'bool' },
    ],
    name: 'setTrustedFillerRegistry',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.WeightRange[]',
        name: 'weights',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.PriceRange[]',
        name: 'prices',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'uint256', name: 'low', type: 'uint256' },
          { internalType: 'uint256', name: 'spot', type: 'uint256' },
          { internalType: 'uint256', name: 'high', type: 'uint256' },
        ],
        internalType: 'struct IFolio.RebalanceLimits',
        name: 'limits',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'auctionLauncherWindow',
        type: 'uint256',
      },
      { internalType: 'uint256', name: 'ttl', type: 'uint256' },
    ],
    name: 'startRebalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stateChangeActive',
    outputs: [
      { internalType: 'bool', name: 'syncStateChangeActive', type: 'bool' },
      { internalType: 'bool', name: 'asyncStateChangeActive', type: 'bool' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'shares', type: 'uint256' },
      { internalType: 'enum Math.Rounding', name: 'rounding', type: 'uint8' },
    ],
    name: 'toAssets',
    outputs: [
      { internalType: 'address[]', name: '_assets', type: 'address[]' },
      { internalType: 'uint256[]', name: '_amounts', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      { internalType: 'address[]', name: '_assets', type: 'address[]' },
      { internalType: 'uint256[]', name: '_amounts', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'trustedFillerEnabled',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'trustedFillerRegistry',
    outputs: [
      {
        internalType: 'contract ITrustedFillerRegistry',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tvlFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'pure',
    type: 'function',
  },
] as const
